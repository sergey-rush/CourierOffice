public class UploadProvider extends BaseProvider{

    private int responseCode = 0;
    private String boundary = "---" + System.currentTimeMillis() + "---";
    private String lineEnd = "\r\n";
    private String twoHyphens = "--";
    private String charset = "UTF-8";
    private DataOutputStream _dataOutputStream;

    public int doUpload(Scan scan, byte[] imageBytes) {

        HttpURLConnection connection = null;


        int imageBytesLength = imageBytes.length;
        String fileName = String.format("PageNum%s", Integer.toString(scan.PageNum));
        String postData = String.format("id=%s&name=%s", "342", "App name");

        int maxBufferSize = 1 * 1024 * 1024;
        URL url;

        try {

            UrlObject urlObject = webContext.getUrl(UrlType.Image);
            url = new URL(urlObject.Url);
            connection = (HttpURLConnection) url.openConnection();
            connection.setDoInput(true);
            connection.setDoOutput(true);
            connection.setUseCaches(false);
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Connection", "Keep-Alive");
            connection.setRequestProperty("enctype", "multipart/form-data");
            connection.setRequestProperty("Content-Type", "multipart/form-data;boundary=" + boundary);

            _dataOutputStream = new DataOutputStream(connection.getOutputStream());
            _dataOutputStream.writeBytes(twoHyphens + boundary + lineEnd);
            _dataOutputStream.writeBytes("Content-Disposition: form-data; name=\"attachedFile\";filename=" + fileName + "" + lineEnd);
            _dataOutputStream.writeBytes(lineEnd);
            _dataOutputStream.write(imageBytes, 0, imageBytesLength);
            _dataOutputStream.writeBytes(lineEnd);
            _dataOutputStream.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);

            addFormField("ApplicationGuid", scan.ApplicationId);
            addFormField("DocumentGuid", Integer.toString(scan.DocumentId));
            addFormField("PageNum", Integer.toString(scan.PageNum));

            _dataOutputStream.writeBytes(lineEnd);
            _dataOutputStream.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);
            _dataOutputStream.flush();
            _dataOutputStream.close();

            responseCode = connection.getResponseCode();
            String serverResponseMessage = connection.getResponseMessage();

            if (responseCode == 200) {

            }

        } catch (MalformedURLException ex) {
            ex.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }

        return responseCode;

    }
  
    public void addFormField(String name, String value) throws IOException {
        _dataOutputStream.writeBytes(twoHyphens + boundary + lineEnd);
        _dataOutputStream.writeBytes("Content-Disposition: form-data; name=\"" + name + lineEnd);
        _dataOutputStream.writeBytes("Content-Type: text/plain; charset=" + charset + lineEnd);
        _dataOutputStream.writeBytes(lineEnd);
        _dataOutputStream.writeBytes(value);
        _dataOutputStream.writeBytes(lineEnd);
        _dataOutputStream.flush();
    }
